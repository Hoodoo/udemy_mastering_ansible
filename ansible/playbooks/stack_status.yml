---
- hosts: lb
  become: true
  tasks:
    - name: verify nginx service
      command: service nginx status

    - name: verify nginx is listening on 80
      wait_for: port=80 timeout=1

- hosts: web
  become: true
  tasks:
    - name: verify apache2 service
      command: service apache2 status

    - name: verify apache2 is listening on 80
      wait_for: port=80 timeout=1

- hosts: db
  become: true
  tasks:
    - name: verify mysql service
      command: service mysql status

    - name: verify mysql is listening on 3306
      wait_for: port=3306 timeout=1

- hosts: lb
  tasks:
    - name: verify end-to-end index response
      uri: url=http://{{hostvars[item].ansible_host}} return_content=yes
      loop: "{{ groups['lb'] }}"
      register: lb_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{lb_index.results}}"

    - name: verify end-to-end db response
      uri: url=http://{{hostvars[item].ansible_host}}/db return_content=yes
      loop: "{{ groups['lb'] }}"
      register: lb_db

    - fail: msg="db failed to return content"
      when: "'Database Connected from' not in item.content"
      with_items: "{{lb_db.results}}"

- hosts: lb
  tasks:
    - name: verify backend index response
      uri: url=http://{{hostvars[item].ansible_host}} return_content=yes
      loop: "{{ groups['web'] }}"
      register: app_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{app_index.results}}"

    - name: verify backend db response
      uri: url=http://{{hostvars[item].ansible_host}}/db return_content=yes
      loop: "{{ groups['web'] }}"
      register: app_db
      
    - fail: msg="db failed to return content"
      when: "'Database Connected from' not in item.content"
      with_items: "{{app_db.results}}"
